---
import type { PrismicItem, BlogPost } from '../../data/site-config';
import * as prismic from '@prismicio/client';
import { getBlogPosts } from '../../prismic';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Button from '../../components/Button.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import PostPreview from '../../components/PostPreview.astro';

export async function getStaticPaths() {
  const posts = (await getBlogPosts(false)) as PrismicItem[];
  const postCount = posts.length;
  return posts.map((post, index) => ({
    params: { slug: post?.slugs ? post.slugs[0] : '404' },
    props: {
      post,
      prevPost: index + 1 !== postCount ? posts[index + 1] : null,
      nextPost: index !== 0 ? posts[index - 1] : null
    }
  }));
}

type Props = { post: PrismicItem; prevPost: PrismicItem; nextPost: PrismicItem };

const { href } = Astro.url;
const { post, prevPost, nextPost } = Astro.props;

const data = post.data as BlogPost;
---

<BaseLayout
  title={prismic.asText(data.title)}
  description={prismic.asText(data.body).slice(0, 160)}
  image={{
    src: `https://dynamic-og-image-generator.vercel.app/api/generate?title=${encodeURIComponent(prismic.asText(data.title))}&author=Soham%20Adwani&websiteUrl=snazzyham.com%2Fwriting&theme=dracula`,
    alt: prismic.asText(data.title)
  }}
  pageType="article"
  showHeader={false}
>
  <article class="mb-16 sm:mb-24">
    <header class="mb-8">
      <h1
        class="text-3xl leading-tight font-heading font-medium sm:text-5xl sm:leading-tight"
      >
        {prismic.asText(data.title)}
      </h1>
      <div class="mt-4 text-sm">
        {data.date}
        {
          post.first_publication_date !== post.last_publication_date && (
            <>
              {' '}
              <span>
                (Updated on <FormattedDate date={new Date(post.last_publication_date)} />)
              </span>
            </>
          )
        }
      </div>
    </header>
    <div
      class="max-w-none prose prose-dante sm:prose-lg"
      set:html={prismic.asHTML(data.body)}
    />

    <div
      class="mt-8 flex flex-wrap items-center gap-6 text-sm justify-between sm:mt-12 sm:text-base"
    >
      <Button
        class="copy-url-button"
        aria-label="Copy link"
        data-url={href}
        data-tooltip-default="Copy link"
        data-tooltip-success="Copied">Share</Button
      >
    </div>
  </article>
  {
    (prevPost || nextPost) && (
      <div class="my-16 sm:my-24">
        <h2 class="mb-12 text-xl font-heading  sm:mb-16 sm:text-2xl">Read Next</h2>
        {nextPost && (
          <PostPreview
            post={nextPost.data as BlogPost}
            slug={nextPost.slugs}
            class="mb-10 sm:mb-12"
            headingLevel="h3"
          />
        )}
        {prevPost && (
          <PostPreview
            post={prevPost.data as BlogPost}
            slug={prevPost.slugs}
            class="mb-10 sm:mb-12"
            headingLevel="h3"
          />
        )}
      </div>
    )
  }
</BaseLayout>

<script>
  document.addEventListener('astro:page-load', () => {
    const copyUrlButton = document.querySelector('.copy-url-button') as HTMLButtonElement;
    copyUrlButton?.addEventListener('click', async () => {
      await copyUrl(copyUrlButton);
    });

    async function copyUrl(button: HTMLButtonElement) {
      let url = button.getAttribute('data-url') || '';
      let label = button.innerText;

      await navigator.clipboard.writeText(url);

      button.innerText = 'Copied';

      setTimeout(() => {
        button.innerText = label;
      }, 2500);
    }
  });
</script>
